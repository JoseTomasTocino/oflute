@String{ene = "enero"}
@String{abr = "abril"}
@String{ago = "agosto"}
@String{mar = "marzo"}
@String{jun = "junio"}
@String{nov = "noviembre"}
@String{dic = "diciembre"}

% ACL2

@Misc{kauf05,
  author = "Matt Kaufmann and J Strother Moore",
  title  = {{How To Prove Theorems Formally}},
  howpublished = "\url{http://www.cs.utexas.edu/users/moore/publications/how-to-prove-thms/main.pdf}",
  month  = ago,
  year   = 2005,
  annote = { 

Este tutorial introductorio a \ac{ACL2} sirvi\'o como base para
establecer los casos a tratar en las dos primeras iteraciones. Adem\'as
de dar una breve introducci\'on a qu\'e es \ac{ACL2}, da ejemplos y
recomendaciones acerca de c\'omo usarlo para programar y para demostrar
teoremas.

},
}

@Misc{jsmweb,
  author = 	 "Matt Kauffmann and J Strother Moore",
  title = 	 {{A Brief ACL2 Tutorial}},
  howpublished = "\url{http://www.cs.utexas.edu/users/moore/publications/tutorial/rev3.html}",
  year = 2000,
  annote = {

Esta demostraci\'on acerca del funcionamiento de \ac{ACL2}, realizada en
formato de diapositivas \ac{HTML}, introduce de manera pr\'actica lo
que los autores llaman ``El M\'etodo'', la forma usual de trabajar con
\ac{ACL2}. El ejemplo consiste en demostrar que un algoritmo m\'as
avanzado de inversi\'on de una lista es equivalente al algoritmo trivial
de inversi\'on.

  },

}

@Misc{indacl2,
  author = 	 {Matt Kauffmann and J Strother Moore},
  title = 	 {{Industrial Proofs with ACL2}},
  month = feb,
  year = 	 2005,
  howpublished = {\url{http://www.cs.utexas.edu/users/moore/publications/how-to-prove-thms/intro-to-acl2.pdf}},
  annote = {

En este informe los creadores de \ac{ACL2} mencionan algunas de sus
aplicaciones en el mundo real, como la demostraci\'on del cumplimiento
del est\'andar \ac{IEEE} 758 de la unidad de coma flotante de los Athlon
K5. Tambi\'en se explica de manera superficial qu\'e es exactamente
\ac{ACL2} y se dan recomendaciones para iniciar su aprendizaje.

  },
}

@Misc{recindacl2,
  author = 	 {J Strother Moore},
  title = 	 {{Recursion and Induction}},
  howpublished = {\url{http://www.cs.utexas.edu/~moore/publications/how-to-prove-thms/notes-version-1.pdf}},
  month = 	 may,
  year = 	 2008,

  annote = {

Este texto, m\'as que un tutorial, consiste en una colecci\'on de
ejercicios diseñados para enseñar a razonar en una l\'ogica formal, m\'as
concretamente la l\'ogica de \ac{ACL2}. Empieza por los fundamentos de
la sintaxis y tipos de datos de Lisp, y finaliza con conceptos
relativamente avanzados como los n\'umeros ordinales.

  },

}

@InProceedings{conf/iccd/BrockHH97,
  title =	"Formally Specifying and Mechanically Verifying
		 Programs for the Motorola Complex Arithmetic Processor
		 {DSP}",
  author =	"Bishop Brock and Warren A. Hunt Jr",
  year = 	"1997",
  bibdate =	"2002-01-03",
  bibsource =	"DBLP,
		 http://dblp.uni-trier.de/db/conf/iccd/iccd97.html#BrockHH97",
  booktitle =	"ICCD",
  pages =	"31--36",
}

% Patrones

@Book{gof,
  author = 	 {Erich Gamma and Richard Helm and Ralph Johnson and John Vlissides},
  title = 	 {Patrones de Diseño},
  publisher = 	 {Addison-Wesley},
  year = 	 {2003},

  annote = {

    Traducci\'on al español del libro que populariz\'o el diseño basado en
    patrones. Se listan patrones de comportamiento, estructurales y de
    creaci\'on de objetos. Aunque el concepto de ``patr\'on'' como
    soluci\'on gen\'erica a un tipo de problema en un contexto determinado
    fue creado por un arquitecto, Christopher Alexander, la disciplina
    donde ha tenido m\'as \'exito e implantaci\'on ha sido en la ingenier{\'\dotlessi}a
    de software.

  },
}

@Book{archpatterns,
  author = 	 {Frank Buschmann and Regine Meunier and Hans Rohnert and Peter Sommerlad and Michael Stal},
  title = 	 {{Pattern-Oriented Software Architecture: A System of Patterns}},
  publisher = 	 {John Wiley and Sons Ltd.},
  year = 	 {2000},
  edition = 	 {primera},
  month = 	 jun,

  annote = {

    Este libro es una de las principales referencias en patrones
    arquitect\'onicos. Generaliza el concepto de patr\'on del libro
    ``Patrones de Diseño'', restringido en principio al propio diseño
    de un subsistema a todos los niveles. As{\'\dotlessi}, se formulan desde
    patrones de arquitectura, que describen las partes del sistema
    completo, hasta patrones de implementaci\'on, soluciones a
    determinados problemas que se ajustan mejor al lenguaje de
    programaci\'on empleado.

  },
}

% Perl

@Book{perlbyexample,
  author = 	 {Ellie Quigley},
  title = 	 {{Perl By Example}},
  publisher = 	 {{Prentice-Hall}},
  year = 	 2002,
  edition = 	 {tercera},

  annote = {

    Este libro, a diferencia de otros, procura enseñar Perl de manera
    general a trav\'es de ejemplos pr\'acticos comentados l{\'\dotlessi}nea a
    l{\'\dotlessi}nea. Da una visi\'on amplia de los usos m\'as avanzados de Perl,
    como la conexi\'on a bases de datos, su uso para diseño de p\'aginas
    web o el empleo de la parte orientada a objetos de Perl.

  },

}

@Misc{perldoc,
  author = 	 {Jon Allen},
  title = 	 {Perl v5.10.0 Documentation},
  howpublished = {\url{http://perldoc.perl.org/}},
  month = 	 mar,
  year = 	 2008,

  annote = {
 
    Esta web es la fuente principal de documentaci\'on de Perl. Su
    extensiva documentaci\'on en l{\'\dotlessi}nea incluye una referencia completa
    de todas las palabras reservadas y funciones predefinidas de Perl,
    junto con tutoriales y listas de preguntas m\'as frecuentes.

  },

}

@Misc{perloowiki,
  author = 	 {Scott Walters},
  title = 	 {{Perl Design Patterns Wiki}},
  howpublished = {\url{http://perldesignpatterns.com/}},
  year = "2006",

  annote = {

    Mantenida por Scott Walters, esta web acumula años de experiencia
    en la implementación del paradigma orientado a objetos en Perl y
    el uso de los conocidos patrones de diseño. Se mencionan tambi\'en
    los anti-patrones, actividades o situaciones indeseables.

  },

}

% Java

@Book{thinkinginjava,
  author = 	 {Bruce Eckel},
  title = 	 {{Thinking in Java}},
  publisher = 	 {Prentice-Hall},
  year = 	 2002,
  edition = 	 {tercera},
  month = 	 dic,

  note = {También disponible en \url{http://mindview.net}},

  annote = {

    El autor, Bruce Eckel, es conocido por otras obras como ``Thinking
    in C++'' o ``Thinking in Patterns'', publicadas en Internet en su
    web \url{http://bruceeckel.com} al mismo tiempo que se hallaban
    disponibles para la venta. Este libro da una visi\'on general de
    Java y de su correcto uso, terminando con cap{\'\dotlessi}tulos dedicados a
    herramientas recomendadas para el desarrollo en Java como Ant o
    JUnit.

  },

}

@Book{jlfguid,
  editor = 	 {Sun Microsystems Inc.},
  title = 	 {{Java(TM) Look and Feel Design Guidelines}},
  publisher = 	 {Addison-Wesley Professional},
  year = 	 {2001},
  edition = 	 {segunda},
  month = 	 mar,

  annote = {
    
    Este libro consiste en una gu{\'\dotlessi}a de estilo para el
    diseño de interfaces gr\'aficas de usuario bajo Java, y en
    particular bajo el Look \& Feel Metal. Sin embargo, es lo
    suficientemente rico en pr\'acticas recomendadas para usabilidad y
    accesibilidad como para poder extender sus consejos al diseño de
    interfaces gráficas en general.

  },

}

@Book{jlfguidadv,
  editor = 	 {Sun Microsystems Inc.},
  title = 	 {{Java(TM) Look and Feel Design Guidelines: Advanced Topics}},
  publisher = 	 {Addison-Wesley Professional},
  year = 	 {2001},
  edition = 	 {primera},
  month = 	 dic,

  annote = {

    Este libro extiende a su primera parte ``Java(TM) Look and Feel
    Design Guidelines'' sobre t\'opicos m\'as especializados y complejos,
    como el diseño de ventanas, men\'us y asistentes.

  },

}

@Book{swingtutorial,
  author = 	 {Kathy Walrath and Mary Campione},
  title = 	 {{The JFC Swing Tutorial}},
  publisher = 	 {Addison-Wesley},
  year = 	 2001,
  edition = 	 {primera},
  month = 	 jul,

  annote = {

    Disponible tambi\'en como un tutorial en l{\'\dotlessi}nea en la direcci\'on
    \url{http://java.sun.com/docs/books/tutorial/uiswing/index.html},
    es el tutorial de Sun que explica de forma pr\'actica la mejor forma
    de aprovechar la funcionalidad de la biblioteca Swing. Se
    describen todos los componentes disponibles y se tratan otros
    conceptos como los manejadores de eventos, la especializaci\'on de
    componentes ya existentes y la colocaci\'on robusta ante cambios en
    el tamaño de la ventana.

  },

}

@Book{javalang,
  author = 	 {Ken Arnold and James Gosling and David Holmes},
  title = 	 {{El Lenguaje de Programaci\'on Java(TM)}},
  publisher = 	 {Addison-Wesley},
  year = 	 {2001},
  address = 	 {Madrid},
  edition = 	 {tercera},

  annote = {

     Este libro, en el que participa uno de los creadores de Java,
     James Gosling, describe la sintaxis y el funcionamiento del
     lenguaje Java y de un pequeño subconjunto de su gran biblioteca
     est\'andar.

  },

}

@Misc{singletonjava,
  author = 	 {Rodney Waldhoff},
  title = 	 {{Implementing the Singleton Pattern in Java}},
  howpublished = {\url{http://radio.weblogs.com/0122027/stories/2003/10/20/implementingTheSingletonPatternInJava.html}},
  month = 	 dic,
  year = 	 2003,

  annote = {

    En este artículo del blog de Rodney Waldhoff, se nos muestra una
    implementaci\'on del patr\'on de diseño \emph{Singleton} en Java
    que difiere de las sugeridas por sus creadores, empleando clases
    separadas para implementar el punto de acceso global y la
    funcionalidad. La clase que representa el punto global puede ser
    configurada en tiempo de ejecución para modificar la clase con la
    funcionalidad que se debe instanciar.

  },
}

@Misc{swingarch,
  author = 	 {Amy Fowler},
  title = 	 {{A Swing Architecture Overview}},
  howpublished = {\url{http://java.sun.com/products/jfc/tsc/articles/architecture/}},
  month = 	 abr,
  year = 	 2003,

  annote = {

    Amy Fowler da una breve explicaci\'on en este art{\'\dotlessi}culo
    de la web de Sun acerca de las razones tras la arquitectura ``de
    modelo separable'' de la biblioteca Swing para interfaces de
    usuario de Java. Dicha arquitectura es un caso simplificado del
    patr\'on arquitect\'onico Modelo-Vista-Controlador donde se han
    unido la Vista y el Controlador. Tambi\'en explica c\'omo se
    consigue la implementaci\'on de los Look \& Feel intercambiables a
    trav\'es del uso de un delegado instalado por el Look \& Feel
    activo para el dibujado del control.

  },

}

@Misc{swingwiki,
  key = {SwingWiki},
  title = 	 {{SwingWiki}},
  howpublished = {\url{http://www.swingwiki.org/}},
  month = 	 apr,
  year = 	 2007,

  annote = {

    Esta web creado por la comunidad de desarrolladores Swing describe
    diversas pr\'acticas recomendadas y soluciones a diversos defectos
    de la biblioteca Swing. Tambi\'en lista ciertas
    caracter{\'\dotlessi}sticas no documentadas de Swing, como la
    disponibilidad de fuentes con anti-aliasing.

  },

}

% Extreme Programming

@Book{javaxpcookbook,
  author = 	 {Eric M. Burke and Brian M. Coyner},
  title = 	 {{Java Extreme Programming Cookbook}},
  publisher = 	 {O'Reilly},
  year = 	 2003,
  month = 	 mar,

  annote = {

    Todos los libros de Extreme Programming hablan a nivel te\'orico,
    pero no dicen c\'omo deber{\'\dotlessi}an implantarse en la pr\'actica. Esta obra
    es un cat\'alogo de las herramientas disponibles libremente para la
    aplicaci\'on de las pr\'acticas de Extreme Programming, y en
    particular las pruebas de unidad. Da una breve introducci\'on a
    herramientas como el gestor de tareas Ant, el marco de pruebas de
    unidad JUnit, y extensiones a \'este como JFCUnit (para interfaces
    gr\'aficas Swing) o XMLUnit (para pruebas de unidad XSLT o XML).

  },

}

@Misc{xpwiki,
  key = {Extreme Programming Roadmap},
  title = 	 {{Extreme Programming Roadmap}},
  howpublished = {\url{http://www.c2.com/cgi/wiki?ExtremeProgrammingRoadmap}},
  year = 2007,
  month = nov,
  annote = {

    Este sitio web fue el lugar en el que se gest\'o la metodología
    Extreme Programming. Aunque hoy en d{\'\dotlessi}a no est\'a muy
    activo, en comparaci\'on con el grupo Yahoo! en la direcci\'on
    \url{http://groups.yahoo.com/group/extremeprogramming/}, contiene
    una gran cantidad de informaci\'on muy valiosa acerca de qu\'e es
    Extreme Programming y c\'omo se puede implementar. Los propios
    usuarios dan sus experiencias y opiniones de la
    metodolog{\'\dotlessi}a, incluy\'endose entre ellos el creador de
    la metodolog{\'\dotlessi}a \'agil de desarrollo Crystal, Alistair
    Cockburn.

  },
}

@Misc{xpmisconceptions,
  author = {Ron Jeffries},
  title = {Misconceptions about {XP}},
  month = jan,
  year = 2002,
  howpublished = {\url{http://www.xprogramming.com/xpmag/Misconceptions.htm}},

  annote = {

    Ron Jeffries desbanca algunos prejuicios acerca de Extreme
    Programming en este art{\'\dotlessi}culo de su web
    \url{http://wwww.xprogramming.com}, como la idea de que en Extreme
    Programming no se genera documentaci\'on en absoluto (se crea s\'olo
    la necesaria) o que mediante la frase ``siempre buscar la soluci\'on
    m\'as simple'' nos conformemos con soluciones inaceptables.

  },

}

@Book{planxp,
  author = 	 {Kent Beck and Martin Fowler},
  title = 	 {Planning Extreme Programming},
  publisher = 	 {Addison-Wesley},
  year = 	 2000,

  annote = {

    Este libro explora en mayor profundidad la planificación de un
    proyecto basado en la metodología Extreme Programming, centrada
    fundamentalmente en las historias de usuario, y da recomendaciones
    sobre c\'omo escribirlas o realizar sus estimaciones.

  },
}

@Book{xpexplained,
  author = 	 {Kent Beck and Cynthia Andres},
  title = 	 {Extreme Programming Explained - Embrace Change},
  publisher = 	 {Addison-Wesley Professional},
  year = 	 2004,
  edition = 	 {segunda},
  month = 	 {noviembre},

  annote = {

    La verdadera difusi\'on de Extreme Programming fue iniciada a trav\'es
    del lanzamiento en 1999 de la primera edici\'on de este libro, el
    primero acerca de dicha metodolog{\'\dotlessi}a, en la que se introduc{\'\dotlessi}an los
    valores, principios y pr\'acticas que formaban sus cimientos. En
    esta segunda edici\'on, los autores han revisado el planteamiento
    b\'asico de Extreme Programming en base a las cr{\'\dotlessi}ticas realizadas
    por la comunidad de desarrolladores. Un ejemplo es la
    reestructuraci\'on de las pr\'acticas (inicialmente todas
    obligatorias) en dos conjuntos: un n\'ucleo obligatorio y un
    conjunto de pr\'acticas opcionales, cuya aplicaci\'on no se recomienda
    hasta implementar efectivamente el n\'ucleo obligatorio.

  },
}

% XPath, XSLT

@TechReport{Clark:99:XTV,
  author =	"James Clark",
  title =	"{XSL} Transformations ({XSLT}) Version 1.0",
  month =	nov,
  note = 	"\url{http://www.w3.org/TR/1999/REC-xslt-19991116}",
  year = 	1999,
  bibsource =	"http://w2.syronex.com/jmr/w3c-biblio",
  type = 	"Recomendación del {W3C}",
  institution =  "W3C",

  annote = {

     Estándar de la W3C para el lenguaje de transformaciones sobre XML
     XSLT, en su versión 1.0.

  },
}

@TechReport{Clark:99:XPL,
  author =	"James Clark and Steven DeRose",
  title =	"{XML} Path Language ({XPath}) Version 1.0",
  month =	nov,
  note = 	"\url{http://www.w3.org/TR/1999/REC-xpath-19991116}",
  year = 	"1999",
  bibsource =	"http://w2.syronex.com/jmr/w3c-biblio",
  type = 	"Recomendación del {W3C}",
  institution =  "W3C",

  annote = {
     
    Estándar de la W3C para el lenguaje declarativo de identificación
    de nodos XML XPath, en su versión 1.0.

  },
}

% Subversion

@Book{svnhandbook,
  author = 	 {Ben Collins-Sussman and Brian W. Fitzpatrick and C. Michael Pilato},
  title = 	 {Version Control with Subversion},
  publisher = 	 {O'Reilly Media},
  year = 	 {2004},
  edition = 	 {primera},
  month = 	 jun,
  note = 	 {Disponible gratuitamente en \url{http://svnbook.red-bean.com/nightly/en/index.html}},
  annote = 	 {

Este texto publicado bajo la licencia Creative Commons a través de
continua comunicación con la comunidad de usuarios instruye
progresivamente al lector acerca del uso efectivo de la funcionalidad
de Subversion, desde el uso básico de un repositorio hasta el control
de acceso y reparación de repositorios o la creación de un repositorio
accesible mediante un navegador web.

  }
}

% GML/SGML

@Misc{SGMLRoots,
  author = 	 {Charles F. Goldfarb},
  title = 	 {The Roots of SGML -- A Personal Recollection},
  howpublished = {\url{http://www.sgmlsource.com/history/roots.htm}},
  year = 	 1996,
  annote = 	 {Recolección personal de las experiencias del creador
                  de GML, el antecesor de SGML, el primer metalenguaje
                  de marcado estructurado ampliamente usado.},
}

@TechReport{XMLSpec,
  author = 	 {Tim Bray and Jean Paoli and C. M. Sperberg-McQueen and Eve Maler and François Yergeau},
  title  = 	 {Extensible Markup Language (XML) 1.0},
  institution =  {World Wide Web Consortium},
  month = 	 sep,
  year  = 2006,
  note  = 	 {\url{http://www.w3.org/TR/xml/}},
  annote = 	 {
Especificación oficial por el W3C del Extensible Markup Language.
  }
}

@article{CairnsG07,
  author    = {Paul A. Cairns and
               Jeremy Gow},
  title     = {Integrating Searching and Authoring in Mizar},
  journal   = {J. Autom. Reasoning},
  volume    = {39},
  number    = {2},
  year      = {2007},
  pages     = {141-160},
  ee        = {http://dx.doi.org/10.1007/s10817-007-9073-2},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote = {En este artículo, los desarrolladores de Alcor, una
                  interfaz gráfica sobre el sistema de demostraciones
                  automatizadas Mizar, discuten acerca de posibles
                  enfoques para la definición de aplicaciones que
                  hagan de asistentes en la realización de estas
                  demostraciones. En particular, describen la gran
                  importancia que ha tenido el cambio de Mizar a XML
                  para sus salidas.},
}

@inproceedings{Urban05,
  author    = {Josef Urban},
  title     = {XML-izing Mizar: Making Semantic Processing and Presentation
               of MML Easy},
  booktitle = {MKM},
  year      = {2005},
  pages     = {346-360},
  ee        = {http://dx.doi.org/10.1007/11618027_23},
  crossref  = {DBLP:conf/mkm/2005},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  annote = {En este artículo, uno de los desarrolladores de Mizar
                  describe las motivaciones, las experiencias y los
                  resultados obtenidos durante el cambio del formato
                  de salida de Mizar de un formato binario \emph{ad
                  hoc} a XML. Indica que se ha producido un aumento
                  considerable, pero no crítico, de los costes en
                  espacio y tiempo, pero consideran que merece la
                  pena, ya que facilitará la creación de nuevas
                  herramientas para Mizar.},
}

@proceedings{DBLP:conf/mkm/2005,
  editor    = {Michael Kohlhase},
  title     = {Mathematical Knowledge Management, 4th International Conference,
               MKM 2005, Bremen, Germany, July 15-17, 2005, Revised Selected
               Papers},
  booktitle = {MKM},
  publisher = {Springer},
  series    = {Lecture Notes in Computer Science},
  volume    = {3863},
  year      = {2006},
  isbn      = {3-540-31430-X},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@Misc{YAXML,
  key = {YAXML},
  title = 	 {{YAXML, the (draft) XML Binding for YAML}},
  howpublished = {\url{http://yaml.org/xml.html}},
  year = 	 {2006},
  annote = {Borrador de la correspondencia de XML a YAML que he
            refinado y revisado para definir YAXML::Reverse.},
}

@Misc{CUSL2,
  key = 	 {PremiosConcurso},
  title = 	 {{Premios del II Concurso Universitario de Software Libre}},
  howpublished = {\url{http://www.concursosoftwarelibre.org/noticias}},
  month = 	 may,
  year = 	 2008,
  annote = 	 {Noticia del II CUSL en que se da un listado de los
                  premios finales del CUSL, en los que XMLEye tiene el
                  honor de aparecer como Primer Premio al Mejor
                  Proyecto Educativo.}
}

@Misc{ForjaXMLEye,
  author = 	 {Antonio García Domínguez},
  title = 	 {Forja de {XMLEye} en {RedIris}},
  howpublished = {\url{https://forja.rediris.es/projects/csl2-xmleye/}},
  month = 	 jul,
  year = 	 2008,
  annote = 	 {Forja del presente Proyecto, en la que los usuarios
                  pueden informar de fallos, proponer mejoras,
                  descargar el código y tener acceso a las copias más
                  recientes de la documentación y los paquetes Debian,
                  entre otras cosas.}
}

@Misc{Assembla,
  key = 	 {Assembla},
  title = 	 {{Assembla: About}},
  howpublished = {\url{http://www.assembla.com/about}},
  year = 	 2008,
  annote = 	 {Información acerca del espacio de trabajo Assembla,
                  que ofrece espacios de desarrollo públicos o
                  privados de forma gratuita, con la posibilidad de
                  ampliar sus capacidades bajo pago. Los proyectos de
                  código abierto reciben algo de tratamiento especial,
                  consiguiendo mayor espacio en disco de forma
                  gratuita. En cierta forma, Assembla podría verse
                  como una forja comercial.}
}

@Misc{WikiWikiWeb,
  key = 	 {WikiWikiWeb},
  title = 	 {{WikiWikiWeb: Front Page}},
  howpublished = {\url{http://www.c2.com/cgi/wiki?}},
  month = 	 jun,
  year = 	 2008,
  annote = 	 {Sitio web del primer wiki de todos. Se halla
                  dedicado a patrones de diseño y aspectos humanos del
                  desarrollo de software.}
}

@Misc{WikiXMLEye,
  author = 	 {Antonio García Domínguez},
  title = 	 {{Wiki de XMLEye}},
  howpublished = {\url{http://wiki.shoyusauce.org/}},
  month = 	 jul,
  year = 	 2008,
  annote = 	 {Wiki del Proyecto presente. A partir de ahora toda
                  la documentación se irá condensando en esta web,
                  para evitar tener que duplicar esfuerzos, y permitir
                  la colaboración de otros participantes en el
                  futuro.}
}

@Misc{YamlInFiveMinutes,
  author = 	 {why the lucky stiff (seudónimo)},
  title = 	 {{YAML in Five Minutes}},
  howpublished = {\url{http://yaml.kwiki.org/index.cgi?YamlInFiveMinutes}},
  month = 	 jul,
  year = 	 2003,
  annote = 	 {Guía introductoria a \ac{YAML} que da los aspectos
                  más importantes en sólo 5 minutos. La fecha de la
                  cita fue extraída del anuncio original en la lista
                  de correo de \ac{YAML}. He aquí una versión acortada
                  de su dirección: \url{http://tinyurl.com/5pjhvb}.}
}

@Misc{YAML,
  author = 	 {Oren Ben-Kiki and Clark Evans and Ingy döt Net},
  title = 	 {{YAML Ain't Markup Language (YAML\textsuperscript{TM}) Version 1.2}},
  howpublished = {\url{http://yaml.org/spec/1.2/}},
  month = 	 may,
  year = 	 2008,
  note = 	 {Working Draft},
  annote = 	 {Esta es la versión 1.2 de la especificación de
                  \acs{YAML}, la más reciente a fecha de
                  hoy. \acs{YAML} es un lenguaje de serialización
                  fácil de leer y escribir por humanos, e
                  interoperable con un amplio número de
                  lenguajes. Esta versión es un borrador prácticamente
                  finalizado, hallándose en una última fase de
                  discusión antes de su aprobación final.},
}

@Misc{OpenJDK,
  key = 	 {OpenJDK},
  title = 	 {{OpenJDK}},
  howpublished = {\url{http://openjdk.java.net/}},
  year = 	 {2008},
  annote = 	 {Proyecto liderado por Sun Microsystems que impulsa
                  la publicación bajo licencias libres de la edición
                  estándar de la Java Platform, y otros proyectos
                  relacionados. Incluirá el código del \acs{JDK},
                  \acs{JRE} y de la \acs{JVM}. Actualmente se halla en
                  un estado muy avanzado.}
}

@Misc{IcedTea,
  key = 	 {IcedTea},
  title = 	 {{IcedTea}: Main Page},
  howpublished = {\url{http://icedtea.classpath.org/wiki/Main_Page}},
  month = 	 may,
  year = 	 2008,
  annote = 	 {Proyecto iniciado por Red Hat que provee un entorno
                  de compilación basado en herramientas libres para el
                  código del proyecto OpenJDK, y reemplaza algunas
                  partes propietarias con código de otros proyectos,
                  como el GNU Classpath. Ha superado recientemente el
                  \ac{TCK} de Sun, pasando a ser el primer entorno
                  100\% libre de \ac{J2SE} 6.0 en conseguirlo (véase
                  la dirección
                  \url{http://blog.softwhere.org/archives/196}).}
}

@Misc{Hanoi,
  author = 	 {Bill Young},
  title = 	 {{The Towers of Hanoi Example}},
  howpublished = {\url{http://www.cs.utexas.edu/users/moore/acl2/v3-3/TUTORIAL1-TOWERS-OF-HANOI.html}},
  month = 	 nov,
  year = 	 2007,
  annote = 	 {Tutorial de la web oficial de ACL2 en que se ilustra
                  su uso para demostrar que se requieren $2^n-1$
                  movimientos para mover todos los $n$ discos de una
                  pila a otra en el problema de las Torres de Hanoi.}
}

@Misc{DuckTyping,
  key = 	 {Python},
  title = 	 {Python Tutorial: Glossary},
  howpublished = {\url{http://docs.python.org/tut/node18.html#l2h-46}},
  month = 	 feb,
  year = 	 2008,
  annote = 	 { Definición de Duck Typing por el glosario del
                  tutorial oficial de Python. Esta técnica es la forma
                  que se emplea comúnmente en lenguajes como Python o
                  Perl para identificar un tipo no por quién es, sino
                  por lo que hace.},
}

@Misc{Martelli2000,
  author = 	 {Alex Martelli},
  title = 	 {polymorphism (was Re: Type checking in python?)},
  howpublished = {\url{http://groups.google.com/group/comp.lang.python/msg/e230ca916be58835?hl=en&}},
  month = 	 jul,
  year = 	 2000,
  annote = 	 {Mensaje original del grupo de noticias
                  \texttt{comp.lang.python} de Alex Martelli, a partir
                  del cual se acuñó el término ``duck typing''.}
}

@Misc{EckelDuckTyping,
  author = 	 {Bruce Eckel},
  title = 	 {{Strong Typing versus Strong Testing}},
  howpublished = {\url{http://mindview.net/WebLog/log-0025}},
  month = 	 may,
  year = 	 2003,
  annote = 	 { Mensaje del weblog del autor en que expone su
                  cambio de postura frente a los lenguajes con
                  sistemas de tipos dinámicos. Sugiere que más que un
                  sistema estático de tipos, es mucho más útil un
                  conjunto de buenas pruebas de unidad automatizadas:
                  esto nos deja utilizar lenguajes dinámicos que
                  imponen menos restricciones y dan una productividad
                  mucho mayor. Como ejemplo de la nueva flexibilidad
                  obtenida, muestra que podemos distinguir entre tipos
                  no por sus nombres, sino por las operaciones que
                  proporcionan, consiguiendo así un nivel mucho más
                  fino de granularidad sin las restricciones que
                  impone la herencia tradicional. }
}

@TechReport{Baresi:Oracles,
    author = {Baresi, Luciano and Young, Michal},
    title = {Test Oracles},
    institution = {University of Oregon,
    Dept. of Computer and Information Science},
    year = 2001,
    type = {Technical Report},
     number = {CIS-TR-01-02},
    address = {Eugene, Oregon, U.S.A.},
    month = {August},
    note = {\url{http://www.cs.uoregon.edu/~michal/pubs/oracles.html}},
    annote = {Recopilación de los tipos de oráculos dirigidos a
                  pruebas más conocidos hasta el momento, clasificados
                  según las técnicas empleadas. Expande sobre el
                  concepto de \emph{oráculo} y muestra algunas
                  posibilidades para los oráculos de sistemas
                  conversores (``transducers'' en el original).}
}

@Misc{Fowler:GUIArch,
  author = 	 {Martin Fowler},
  title = 	 {{GUI Architectures}},
  howpublished = {\url{http://martinfowler.com/eaaDev/uiArchs.html}},
  month = 	 jul,
  year = 	 2006,
  annote = 	 {Expone y aclara los patrones arquitectónicos más
                  comúnmente utilizados en los últimos años para
                  estructurar las aplicaciones basadas en interfaces
                  gráficas, pasando por los patrones MVC, MVP, y por
                  el conocido Formularios y Controles, propio de
                  herramientas RAD como \CPP Builder. Es
                  particularmente interesante el enfoque que utiliza
                  respecto a las pruebas de unidad en interfaces
                  gráficas: no es tanto cuestión de mejorar las
                  herramientas de pruebas existentes, como definir un
                  diseño que las facilite.}
}



@InBook{Meszaros:XUnit,
  author = 	 {Gerard Meszaros},
  title = 	 {{xUnit Test Patterns}},
  chapter = 	 {{Using Test Doubles}},
  publisher = 	 {Addison-Wesley},
  year = 	 2007,
  series = 	 {{The Addison-Wesley Signature Series}},
  address = 	 {Westford, Massachussetts, EEUU},
  edition = 	 {1ª},
  month = 	 may,
  pages = 	 {521--579},

  annote = 	 {Capítulo dedicado a los patrones de Dobles para
                  Pruebas de un libro completo dedicado a técnicas y
                  patrones relacionadas con pruebas de unidad basadas
                  en el marco xUnit. Los Dobles para Pruebas
                  sustituyen a un objeto del que depende nuestro
                  código a probar, pudiendo realizar pruebas sobre las
                  entradas y salidas desde y hacia esta dependencia.}
}

@Manual{ACL2:BookMakefiles,
  title = 	 {{ACL2 Version 3.3: BOOK-MAKEFILES}},
  author = 	 {Matt Kaufmann and J Strother Moore},
  organization = {University of Texas},
  address = 	 {Austin, EEUU},
  month = 	 nov,
  year = 	 2007,
  annote = 	 {Disponible electrónicamente bajo
                  \url{http://www.cs.utexas.edu/users/moore/acl2/v3-3/BOOK-MAKEFILES.html},
                  esta página del manual de \acs{ACL2} describe cómo
                  se organizan los libros de \acs{ACL2}, y nos da una
                  serie de convenciones con las que estructurar los
                  proyectos multifichero.}
}

@Misc{Gafter:ClosuresJava,
  author = 	 {Neal Gafter},
  title = 	 {{A Definition of Closures}},
  howpublished = {\url{http://gafter.blogspot.com/2007/01/definition-of-closures.html}},
  month = 	 jan,
  year = 	 2007,
  annote = 	 {Mensaje del blog de Neal Gafter en el cual expone la
                  historia de las clausuras lambda, y cómo podrían
                  suponer una importante mejora para
                  Java. Actualmente, participa en la definición de una
                  \acs{JSR} para su implementación y en la creación
                  del prototipo asociado, como integrante del proyecto
                  ``Closures for the Java Programming Language''
                  (\url{http://www.javac.info/}).}
}

@TechReport{Steele:Scheme,
  author = 	 {Gerarld Jay Sussman and Guy Lewis Steele, Jr.},
  title = 	 {{Scheme: An Interpreter for Extended Lambda Calculus}},
  institution =  {MIT AI Lab},
  year = 	 1975,
  type = 	 {AI Lab Memo},
  number = 	 {AIM-349},
  address = 	 {Disponible electrónicamente en \url{http://library.readscheme.org/page1.html}},
  month = 	 dec,
  annote = 	 {Este artículo presenta la primera versión de Scheme,
                  el primer intérprete de un dialecto de Lisp en
                  utilizar por defecto alcance léxico y no
                  dinámico. Así, al invocar a una función anónima (o
                  \emph{expresión lambda} en Lisp) devuelta que
                  hiciera referencia a variables no locales, se
                  usarían no las variables disponibles en el momento
                  de la llamada, sino las disponibles en el momento de
                  la definición de la expresión lambda. De esta forma
                  se podrían mantener los axiomas del cálculo lambda
                  propuesto por Alonzo Church. Este concepto de
                  función anónima con ligaduras a las variables no
                  locales disponibles en el momento de su definición,
                  y que perduran más allá de la ejecución de la
                  función que devolvío la función anónima, se conoce
                  hoy en día como \emph{clausura lambda}, y es una
                  construcción de uso muy extendido entre los usuarios
                  de Lisp y otros lenguajes funcionales, pero también
                  presente en lenguajes como JavaScript o Python, en
                  formas más limitadas. }
}



@Manual{LispWorks:CLHS,
  title = 	 {{Common Lisp HyperSpec: 1.1.2 History}},
  organization = {LispWorks Ltd.},
  year = 	 2005,
  note = 	 {Disponible electrónicamente en \url{http://www.lispworks.com/documentation/HyperSpec/Body/01_ab.htm}},
  annote = 	 {Página de la documentación de Common Lisp en versión
                  HTML generada automáticamente a partir del estándar
                  oficial, que trata sobre la historia de Lisp, y
                  menciona a Scheme directamente como el primer
                  lenguaje que, entre otras cosas, introdujo la
                  primera implementación completa de las clausuras
                  lambda con alcance léxico.}
}

@Misc{Seibel:Lexical,
  author = 	 {Peter Seibel et al.},
  title = 	 {History of lexical scoping in {Scheme} and other {Lisps}?},
  howpublished = {\url{http://groups.google.com/group/comp.lang.lisp/browse_thread/thread/12f458dd1e931338/9c1c8061eb6804fa?q=closures+scheme&lnk=ol&}},
  month = 	 oct,
  year = 	 2003,
  annote = 	 {Hilo en el grupo Usenet \texttt{comp.lang.lisp}
                  abierto por Peter Seibel en el que se discute cómo
                  Scheme no fue tanto el primer dialecto de Lisp en
                  tener alcance léxico, como el primero en
                  implementarlo al 100\%: envolver el código con
                  \texttt{FUNCTION} parecía funcionar sin problemas en
                  el Lisp 1.5 original, pero sólo iba a medias en
                  todos los dialectos restantes.}
}

@Misc{sharedmime,
  author = {Freedesktop.org},
  title = {{Software/shared-mime-info}},
  howpublished = {\url{http://freedesktop.org/wiki/Software/shared-mime-info}},
  year = {2008}
}

@Misc{xpointer,
  author = {Steve DeRose and Eve Maler and Ron Daniel},
  title = {{XPointer xpointer() Scheme}},
  howpublished = {\url{http://www.w3.org/TR/xptr-xpointer}},
  year = {19 diciembre 2002}
}

@Misc{debianpolicy,
  author = {Ian Jackson and Christian Schwarz},
  title = {{Debian Policy Manual}},
  howpublished = {\url{http://www.debian.org/doc/debian-policy/}},
  year = 2008,
  month = jun,
}

@Misc{cdbsdoc,
  author = {Marc Dequènes and Arnaud Patard},
  title = {{CDBS Documentation}},
  howpublished = {\url{https://perso.duckcorp.org/duck/cdbs-doc/cdbs-doc.xhtml}},
  year = {2007}
}

@Misc{debianmaintainer,
  author = {Josip Rodin and Osamu Aoki},
  title = {{Debian New Maintainer's Guide}},
  howpublished = {\url{http://www.debian.org/doc/maint-guide/index.html}},
  year = {2007}
}

@Misc{packagingcomplete,
  author = {Ubuntu Wiki},
  title = {{PackagingGuide/Complete}},
  howpublished = {\url{https://wiki.ubuntu.com/PackagingGuide/Complete}},
  year = {2008}
}

@Misc{packagingpatching,
  author = {Ubuntu Wiki},
  title = {{PackagingGuide/PatchSystems}},
  howpublished = {\url{https://wiki.ubuntu.com/PackagingGuide/PatchSystems}},
  year = {2007}
}

@Misc{checkinstall,
  author = {Felipe Eduardo Sánchez Díaz Durán},
  title = {{CheckInstall}},
  howpublished = {\url{http://asic-linux.com.mx/~izto/checkinstall/index.php}},
  year = {2007}
}

@Misc{fdgspecs,
  author = {FreeDesktop.org},
  title = {{FreeDesktop.org Specifications}},
  howpublished = {\url{http://www.freedesktop.org/wiki/Specifications}},
  year = {2008},
  month = jul,
}

@Misc{fdmenu,
  author = {FreeDesktop.org},
  title = {{FreeDesktop.org Desktop Menu Specification}},
  howpublished = {\url{http://standards.freedesktop.org/menu-spec/latest/}},
  year = {2008}
}

@Misc{ubuntuversioning,
  author = {Marius Ducea},
  title = {{Ubuntu package version naming explanation}},
  howpublished = {\url{http://www.ducea.com/2006/06/17/ubuntu-package-version-naming-explanation/}},
  year = {2006}
}

@Misc{cpan,
  author = {Jarkko Hietaniemi},
  title = {{Comprehensive Perl Archive Network}},
  howpublished = {\url{http://www.cpan.org}},
  year = {2008}
}

@Misc{autobook,
  author = {Gary V. Vaughan and Ben Elliston and Tom Tromey and Ian Lance Taylor},
  title = {{Autoconf, Automake and Libtool}},
  howpublished = {\url{http://sourceware.org/autobook/}},
  year = {2006}
}
